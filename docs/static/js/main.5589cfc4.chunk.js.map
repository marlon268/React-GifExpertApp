{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","indice","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACG,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,YAAY,kBACZC,MAAOV,EACPW,SAnBiB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UACnDH,GAFiB,gEAIGI,MAAMF,GAJT,cAIdG,EAJc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAabM,GAba,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACG,sBAAKc,UAAU,OAAf,UACG,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCFhBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACvB,ECFyB,SAACA,GAC1B,MAA0Bf,mBAAS,CAChCsB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OACpBC,YAAW,WACRJ,EAAS,CACNf,KAAMkB,EACNL,SAAS,MAEZ,UAEN,CAACpB,IAEGqB,EDf2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACG,qCACG,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACIH,EAAOJ,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aET/BiB,EAAe,WACzB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACIS,EAAWgB,KAAI,SAACT,EAAU6B,GAAX,OACb,cAAC,EAAD,CAAwB7B,SAAUA,GAApBA,Y,MCV7B8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5589cfc4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n   // Le agregamos un estado para saber lo que la persona esta escribiendo\r\n   const [inputValue, setInputValue] = useState(\"\");\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories((categories) => [inputValue, ...categories]);\r\n         setInputValue(\"\");\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            placeholder=\"Busca tu Stiker\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n         />\r\n      </form>\r\n   );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n      category\r\n   )}y&limit=10&api_key=E6apNDOEozsDlXjyQvgKgOmiqtXUHgiV`;\r\n   const response = await fetch(url);\r\n   const { data } = await response.json();\r\n   const gifs = data.map((img) => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url,\r\n      };\r\n   });\r\n   return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n   return (\r\n      <div className=\"card\">\r\n         <p>{title}</p>\r\n         <img src={url} alt={title} />\r\n      </div>\r\n   );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3>{category}</h3>\r\n         {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n         <div className=\"card-grid\">\r\n            {images.map((img) => {\r\n               return <GifGridItem key={img.id} {...img} />;\r\n            })}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true,\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category).then((imgs) =>\r\n         setTimeout(() => {\r\n            setState({\r\n               data: imgs,\r\n               loading: false,\r\n            });\r\n         }, 1000)\r\n      );\r\n   }, [category]);\r\n\r\n   return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n   const [categories, setCategories] = useState([\"Naruto\"]);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         <ol>\r\n            {categories.map((category, indice) => (\r\n               <GifGrid key={category} category={category} />\r\n            ))}\r\n         </ol>\r\n      </>\r\n   );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}